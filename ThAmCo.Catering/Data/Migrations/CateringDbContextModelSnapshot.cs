// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Catering.Data;

#nullable disable

namespace ThAmCo.Catering.Data.Migrations
{
    [DbContext(typeof(CateringDbContext))]
    partial class CateringDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodBooking", b =>
                {
                    b.Property<int>("FoodBookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientReferenceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.HasKey("FoodBookingId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodBookings");

                    b.HasData(
                        new
                        {
                            FoodBookingId = 1,
                            ClientReferenceId = 101,
                            MenuId = 1,
                            NumberOfGuests = 20
                        },
                        new
                        {
                            FoodBookingId = 2,
                            ClientReferenceId = 102,
                            MenuId = 2,
                            NumberOfGuests = 15
                        },
                        new
                        {
                            FoodBookingId = 3,
                            ClientReferenceId = 103,
                            MenuId = 3,
                            NumberOfGuests = 50
                        },
                        new
                        {
                            FoodBookingId = 4,
                            ClientReferenceId = 104,
                            MenuId = 4,
                            NumberOfGuests = 30
                        },
                        new
                        {
                            FoodBookingId = 5,
                            ClientReferenceId = 105,
                            MenuId = 5,
                            NumberOfGuests = 25
                        },
                        new
                        {
                            FoodBookingId = 6,
                            ClientReferenceId = 106,
                            MenuId = 1,
                            NumberOfGuests = 10
                        },
                        new
                        {
                            FoodBookingId = 7,
                            ClientReferenceId = 107,
                            MenuId = 2,
                            NumberOfGuests = 40
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodItem", b =>
                {
                    b.Property<int>("FoodItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("FoodItemId");

                    b.ToTable("FoodItems");

                    b.HasData(
                        new
                        {
                            FoodItemId = 1,
                            Description = "Spaghetti Carbonara",
                            UnitPrice = 12.99m
                        },
                        new
                        {
                            FoodItemId = 2,
                            Description = "Caesar Salad",
                            UnitPrice = 8.99m
                        },
                        new
                        {
                            FoodItemId = 3,
                            Description = "Grilled Veggie Skewers",
                            UnitPrice = 10.50m
                        },
                        new
                        {
                            FoodItemId = 4,
                            Description = "BBQ Ribs",
                            UnitPrice = 15.99m
                        },
                        new
                        {
                            FoodItemId = 5,
                            Description = "Garlic Bread",
                            UnitPrice = 4.99m
                        },
                        new
                        {
                            FoodItemId = 6,
                            Description = "Sushi Platter",
                            UnitPrice = 18.99m
                        },
                        new
                        {
                            FoodItemId = 7,
                            Description = "Miso Soup",
                            UnitPrice = 3.99m
                        },
                        new
                        {
                            FoodItemId = 8,
                            Description = "Bacon Cheeseburger",
                            UnitPrice = 12.49m
                        },
                        new
                        {
                            FoodItemId = 9,
                            Description = "Fries",
                            UnitPrice = 2.99m
                        },
                        new
                        {
                            FoodItemId = 10,
                            Description = "Steak and Eggs",
                            UnitPrice = 17.99m
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MenuName = "Italian Feast"
                        },
                        new
                        {
                            MenuId = 2,
                            MenuName = "Vegetarian Delight"
                        },
                        new
                        {
                            MenuId = 3,
                            MenuName = "BBQ Extravaganza"
                        },
                        new
                        {
                            MenuId = 4,
                            MenuName = "Asian Fusion"
                        },
                        new
                        {
                            MenuId = 5,
                            MenuName = "Classic American"
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.MenuFoodItem", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FoodItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuId", "FoodItemId");

                    b.HasIndex("FoodItemId");

                    b.ToTable("MenuFoodItems");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 1
                        },
                        new
                        {
                            MenuId = 1,
                            FoodItemId = 5
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 3
                        },
                        new
                        {
                            MenuId = 2,
                            FoodItemId = 2
                        },
                        new
                        {
                            MenuId = 3,
                            FoodItemId = 4
                        },
                        new
                        {
                            MenuId = 4,
                            FoodItemId = 6
                        },
                        new
                        {
                            MenuId = 4,
                            FoodItemId = 7
                        },
                        new
                        {
                            MenuId = 5,
                            FoodItemId = 8
                        },
                        new
                        {
                            MenuId = 5,
                            FoodItemId = 9
                        },
                        new
                        {
                            MenuId = 5,
                            FoodItemId = 10
                        });
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodBooking", b =>
                {
                    b.HasOne("ThAmCo.Catering.Data.Menu", "Menu")
                        .WithMany("FoodBookings")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.MenuFoodItem", b =>
                {
                    b.HasOne("ThAmCo.Catering.Data.FoodItem", "FoodItem")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("FoodItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ThAmCo.Catering.Data.Menu", "Menu")
                        .WithMany("MenuFoodItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.FoodItem", b =>
                {
                    b.Navigation("MenuFoodItems");
                });

            modelBuilder.Entity("ThAmCo.Catering.Data.Menu", b =>
                {
                    b.Navigation("FoodBookings");

                    b.Navigation("MenuFoodItems");
                });
#pragma warning restore 612, 618
        }
    }
}
